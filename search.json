[{"path":"https://mikmart.github.io/cranrepo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cranrepo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mikmart.github.io/cranrepo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikko Marttila. Author, maintainer.","code":""},{"path":"https://mikmart.github.io/cranrepo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marttila M (2022). cranrepo: Create Maintain CRAN-like Repositories. https://github.com/mikmart/cranrepo, https://mikmart.github.io/cranrepo/.","code":"@Manual{,   title = {cranrepo: Create and Maintain CRAN-like Repositories},   author = {Mikko Marttila},   year = {2022},   note = {https://github.com/mikmart/cranrepo, https://mikmart.github.io/cranrepo/}, }"},{"path":"https://mikmart.github.io/cranrepo/index.html","id":"cranrepo","dir":"","previous_headings":"","what":"Create and Maintain CRAN-like Repositories","title":"Create and Maintain CRAN-like Repositories","text":"cranrepo gives basic tools set CRAN-like R package repository. can: Set repository directory structure index repo_create(). Add source binary package bundles repository repo_insert(). Remove versions packages repository repo_remove(). Serve repositories HTTP development purposes repo_serve(). key features include: Fast updates package index, thanks cranlike hood. concise yet sufficient interface easily build tools top .","code":""},{"path":"https://mikmart.github.io/cranrepo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Maintain CRAN-like Repositories","text":"can install development version cranrepo GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mikmart/cranrepo\")"},{"path":"https://mikmart.github.io/cranrepo/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Create and Maintain CRAN-like Repositories","text":"packages repository management space include: miniCRAN, focuses creating complete snapshots sets curated packages CRAN-like repos, lacks support packages sources, local bundles. drat, broad set tools manage repository, also many high level features, conveniences (especially around git GitHub), opinions can cause friction trying use base tools. goal cranrepo strike balance high level enough useful setting repository, yet low level enough make easy build tools top . Essentially, ’s set fundamental repository management tools wish drat exposed.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/cranrepo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cranrepo: Create and Maintain CRAN-like Repositories — cranrepo-package","title":"cranrepo: Create and Maintain CRAN-like Repositories — cranrepo-package","text":"Basic tools creating CRAN-like package repositories, adding removing packages, keeping package index updated.","code":""},{"path":[]},{"path":"https://mikmart.github.io/cranrepo/reference/cranrepo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cranrepo: Create and Maintain CRAN-like Repositories — cranrepo-package","text":"Maintainer: Mikko Marttila mikkmart@pm.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CRAN-like package repository — repo_create","title":"Create a CRAN-like package repository — repo_create","text":"Set directory structure package indexes CRAN-like package repository suitable install.packages() .","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CRAN-like package repository — repo_create","text":"","code":"repo_create(root = \".\", r_version = getRversion())"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CRAN-like package repository — repo_create","text":"root Path directory use repository root. created exist. r_version version R create binary distribution trees .","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a CRAN-like package repository — repo_create","text":"Path repository root directory, invisibly.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a CRAN-like package repository — repo_create","text":"Binary distribution trees always created avoid errors repository accessed via file:// protocol.","code":""},{"path":[]},{"path":"https://mikmart.github.io/cranrepo/reference/repo_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CRAN-like package repository — repo_create","text":"","code":"if (FALSE) { # Create a package repository repo_create(\"./repos/latest\") }"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a package bundle into a repository — repo_insert","title":"Insert a package bundle into a repository — repo_insert","text":"can insert multiple packages one call, long type version R.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a package bundle into a repository — repo_insert","text":"","code":"repo_insert(repo, file, type, r_version = getRversion(), replace = TRUE)"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a package bundle into a repository — repo_insert","text":"repo Path root directory package repository. file Path source binary package bundle added. type Type packages. One : \"source\", \"win.binary\", \"mac.binary\". r_version binary packages, version R built . replace Logical. package replaced already present?","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert a package bundle into a repository — repo_insert","text":"Path(s) inserted package file(s), invisibly.","code":""},{"path":[]},{"path":"https://mikmart.github.io/cranrepo/reference/repo_insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a package bundle into a repository — repo_insert","text":"","code":"if (FALSE) { # Insert different types of package bundles repo_insert(\"./repos/latest\", \"foo_0.1.0.tar.gz\", \"source\") repo_insert(\"./repos/latest\", \"foo_0.1.0.zip\", \"win.binary\") repo_insert(\"./repos/latest\", \"foo_0.1.0.tgz\", \"mac.binary\")  # Throw an error if trying to insert a package that already exists repo_insert(\"./repos/latest\", \"foo_0.1.0.tar.gz\", \"source\", replace = FALSE)  # Insert a binary built for a different version of R repo_insert(\"./repos/latest\", \"foo_0.1.0.zip\", \"win.binary\", r_version = \"4.0\") }"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a package from a repository — repo_remove","title":"Remove a package from a repository — repo_remove","text":"dry run, specify commit = FALSE just show list files removed.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a package from a repository — repo_remove","text":"","code":"repo_remove(   repo,   package,   version,   type,   r_version = getRversion(),   commit = TRUE )"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a package from a repository — repo_remove","text":"repo Path root directory package repository. package name package remove. version version package remove. Use NULL remove versions. type Type packages. One : \"source\", \"win.binary\", \"mac.binary\". r_version binary packages, version R built . commit Logical. FALSE return list files removed, without actually removing .","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a package from a repository — repo_remove","text":"Path(s) removed package file(s), invisibly.","code":""},{"path":[]},{"path":"https://mikmart.github.io/cranrepo/reference/repo_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a package from a repository — repo_remove","text":"","code":"if (FALSE) { # Remove a specific version of a package repo_remove(\"./repos/latest\", \"foo\", \"0.1.0\", \"source\")  # Remove all versions of a package repo_remove(\"./repos/latest\", \"foo\", NULL, \"win.binary\")  # Get a list of packages that would be removed repo_remove(\"./repos/latest\", \"foo\", NULL, \"mac.binary\", commit = FALSE) }"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_serve.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve a repository over HTTP — repo_serve","title":"Serve a repository over HTTP — repo_serve","text":"Serve packages repository HTTP locally. production use, likely different file server, setting repository can useful test behaviour web protocol.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_serve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve a repository over HTTP — repo_serve","text":"","code":"repo_serve(repo, ...)"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_serve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve a repository over HTTP — repo_serve","text":"repo Path root directory package repository. ... Additional arguments passed servr::httd().","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_serve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serve a repository over HTTP — repo_serve","text":"","code":"if (FALSE) { repo_serve(\"./repos/latest\") }"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the package index of a repository — repo_update","title":"Update the package index of a repository — repo_update","text":"full update package index repository. Functions package update index operate, calling necessary index gone sync due external changes.","code":""},{"path":"https://mikmart.github.io/cranrepo/reference/repo_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the package index of a repository — repo_update","text":"","code":"repo_update(repo, type, r_version = getRversion())"},{"path":"https://mikmart.github.io/cranrepo/reference/repo_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the package index of a repository — repo_update","text":"repo Path root directory package repository. type Type packages. One : \"source\", \"win.binary\", \"mac.binary\". r_version binary packages, version R built .","code":""},{"path":[]},{"path":"https://mikmart.github.io/cranrepo/reference/repo_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update the package index of a repository — repo_update","text":"","code":"if (FALSE) { # Update a package index that has gone out of sync repo_update(\"./repos/latest\", \"source\") }"}]
